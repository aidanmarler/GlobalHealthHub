<script lang="ts">
	import { currentViewportState, viewportData } from '$lib/globals/Viewport.svelte';
	import { missionName } from '$lib/mapDependencies';
	import { type MissionCount, type Project } from '$lib/types';
	import BarChart from './missionBarCharts.svelte.txt';

	('use strict');

	let missionCount = $state({
		['Education']: 0,
		['Research']: 0,
		['Service']: 0
	});

	function CountProjectTypes(projects_counted: Project[]) {
		let projectTypes: MissionCount = {
			['Education']: 0,
			['Research']: 0,
			['Service']: 0
		};
		projects_counted.forEach((project) => {
			switch (project.Mission) {
				case missionName['Education']: {
					projectTypes['Education'] += 1;
					break;
				}
				case missionName['Research']: {
					projectTypes['Research'] += 1;
					break;
				}
				case missionName['Service']: {
					projectTypes['Service'] += 1;
					break;
				}
				default: {
					console.log('Unknown mission type: ' + project.Mission);
					break;
				}
			}
			return;
		});
		return projectTypes;
	}

	$effect(() => {
		//console.log("viewportData", viewportData)
		//missionCount = CountProjectTypes(viewportData.projects);
		missionCount = CountProjectTypes(viewportData.projects);
		//console.log("", missionCount);
	});

	let legendTitle = $derived.by(() => {
		let title: string = '';
		switch (currentViewportState.scale) {
			case 'Global': {
				title = 'Missions, Globaly';
				break;
			}
			case 'Network': {
				title = 'Missions led by ' + currentViewportState.networkName;
				break;
			}
			case 'Country': {
				title = 'Missions in ' + currentViewportState.countryName;
				break;
			}
			case 'Project': {
				title = 'Project Mission';
				break;
			}
			default: {
				title = 'Missions';
			}
		}
		return title;
	});
</script>

<div class=" flex w-full items-center text-black">
	<h4 class=" w-40 self-center px-2 text-center text-xl font-semibold">{legendTitle}</h4>
	<BarChart {missionCount} />
</div>
